rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow verification codes to be written and read by anyone (for development purposes)
    match /verificationCodes/{phoneNumber} {
      allow create, read, update, delete: if true; // Allow all operations for testing purposes
    }
    // Allow anyone to read tickets, only authenticated users can write
    match /tickets/{ticketId} {
      allow read: if true;
      allow write: if request.auth != null;
    }

    // Allow authenticated users to create and read orders
    match /orders/{orderId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.clientId || request.auth.uid == resource.data.artistId);
    }
    
    // Allow authenticated users to send and read messages if they are sender or receiver
    match /messages/{messageId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.senderId || request.auth.uid == resource.data.receiverId);
      allow create: if request.auth != null && 
        (request.auth.uid == request.resource.data.senderId);
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.senderId;
    }

    // Allow anyone to read users, only authenticated user can write their own data
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;

      // Allow authenticated user to read/write their own tickets subcollection
      match /tickets/{ticketId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
      // Allow authenticated user to read/write their own services subcollection
      match /services/{serviceId} {
        allow read: if true;
        allow write: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}
